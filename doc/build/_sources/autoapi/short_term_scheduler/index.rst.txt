:mod:`short_term_scheduler`
===========================

.. py:module:: short_term_scheduler


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   short_term_scheduler.Schedules



Functions
~~~~~~~~~

.. autoapisummary::

   short_term_scheduler.charge_observatories
   short_term_scheduler.target_list_good_coord_format
   short_term_scheduler.visibility_plot
   short_term_scheduler.save_schedule
   short_term_scheduler.make_plans
   short_term_scheduler.read_night_block
   short_term_scheduler.make_docx_schedule
   short_term_scheduler.date_range_in_days


.. data:: dt
   

   

.. data:: constraints
   

   

.. function:: charge_observatories(Name)


.. function:: target_list_good_coord_format(path_target_list)

   Give target corrdinates in ICRS format (used for astropy.coordinates SkyCoord function)

   :param path_target_list:
   :type path_target_list: path on your computer toward the target list, by default take the one on the Cambridge server

   :returns: **targets**
   :rtype: targets list with the following format : [<FixedTarget "Sp0002+0115" at SkyCoord (ICRS): (ra, dec) in deg (0.52591667, 1.26003889)>,


.. py:class:: Schedules

   .. method:: load_parameters(self, input_file_short_term, nb_observatory)



   .. method:: night_duration(self, day)


      :param day: day str format '%y%m%d HH:MM:SS.sss'
      :return:


   .. method:: monitoring(self, input_name, airmass_max, time_monitoring)



   .. method:: dome_rotation(self)



   .. method:: special_target_with_start_end(self, input_name)



   .. method:: special_target(self, input_name)



   .. method:: transit_follow_up(self, follow_up_list)



   .. method:: planification(self)



   .. method:: make_scheduled_table(self)



   .. method:: make_night_block(self)



   .. method:: exposure_time(self, input_name, day=None)



   .. method:: visibility_plot(self)




.. function:: visibility_plot(day, observatory, night_block)


.. function:: save_schedule(input_file, nb_observatory, save, over_write, date_range, telescope)


.. function:: make_plans(day, nb_days, telescope)


.. function:: read_night_block(telescope, day)


.. function:: make_docx_schedule(observatory, telescope, date_range, name_operator, path_target_list)


.. function:: date_range_in_days(date_range)


